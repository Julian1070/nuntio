{"version":3,"sources":["assets/correct.mp3","assets/incorrect.mp3","App.js","sentences.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SpeechRecognition","recognition","sentences","","ja-JP","de-DE","library","add","fas","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initiate","setState","userInitiation","setLanguage","code","language","phrases","phrase","state","phraseIndex","playAudio","s","msg","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","skipPhrase","nextIndex","length","prevState","answerReceived","startRecording","talking","start","stopRecording","stop","onresult","event","_this2","last","results","transcript","confidence","isCorrect","toLowerCase","replace","userUtterance","answerCorrect","answerScore","setTimeout","bind","assertThisInitialized","browserSupport","myRef","React","createRef","webkitSpeechRecognition","err","audio","feedback","_this3","react_default","a","createElement","className","id","onClick","ref","src","correctSound","autoPlay","incorrectSound","style","width","concat","react_fontawesome_index_es","icon","title","onMouseDown","onMouseUp","href","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8aa98f00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/correct.80da24e4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/incorrect.248b888b.mp3\";","import React, { Component } from 'react';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport correctSound from './assets/correct.mp3';\nimport incorrectSound from './assets/incorrect.mp3';\nimport sentences from \"./sentences.js\"\n\nlibrary.add(fas)\n\nvar SpeechRecognition\nvar recognition\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      browserSupport: true,\n      userInitiation: false,\n      language: \"\",\n      phrases: [],\n      phrase: \"\",\n      phraseIndex: 0,\n      userUtterance: \"\",\n      talking: false,\n      answerReceived: false,\n      answerCorrect: false\n    };\n    this.myRef = React.createRef();\n  }\n\n  componentDidMount() {\n    try {\n      SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      recognition = new SpeechRecognition();\n    } catch(err) {\n      this.setState({browserSupport: false})\n    }\n    this.setState(prevState => ({\n      phrases: sentences[prevState.language],\n      phrase: sentences[prevState.language][prevState.phraseIndex],\n    }))\n  }\n\n  initiate = () => {\n    this.setState({userInitiation: true})\n  }\n\n  setLanguage = (code) => {\n    this.setState({\n      language: code,\n      phrases: sentences[code],\n      phrase: sentences[code][this.state.phraseIndex],\n    }, () => this.playAudio(this.state.phrase))\n  }\n\n  playAudio = (s) => {\n    let msg = new SpeechSynthesisUtterance(s);\n    msg.lang = this.state.language\n    window.speechSynthesis.speak(msg);\n  }\n\n  skipPhrase = () => {\n    let nextIndex = (\n      this.state.phraseIndex===this.state.phrases.length-1\n    ) ? 0 : this.state.phraseIndex+1\n    this.setState(prevState => ({\n      answerReceived: false,\n      phrase: prevState.phrases[nextIndex],\n      phraseIndex: nextIndex\n    }), this.playAudio(this.state.phrases[nextIndex]))\n  }\n\n  startRecording = () => {\n    this.setState(prevState => ({\n      talking: true,\n      answerReceived: false\n    }))\n    recognition.lang = this.state.language\n    recognition.start()\n  }\n\n  stopRecording = () => {\n    recognition.stop()\n    this.setState(prevState => ({\n      talking: false,\n    }))\n    recognition.onresult = function(event) {\n      // I could check out all results and get the score for the right one\n      let last = event.results.length - 1;\n      let transcript = event.results[last][0].transcript;\n      let confidence = event.results[0][0].confidence;\n      let isCorrect = (this.state.phrase.toLowerCase().replace(/[.,-/#!$%^&*;:{}=\\-_`~()@+?><[\\]+]/g, '').replace(/[\\pL_]+/g, \"\")===transcript.toLowerCase().replace(/[\\pL_]+/g, \"\"))\n      this.setState(prevState => ({\n        userUtterance: transcript,\n        answerReceived: true,\n        answerCorrect: isCorrect,\n        answerScore: (isCorrect? confidence : 0)\n      }))\n      if (isCorrect){\n        let nextIndex = (\n          this.state.phraseIndex===this.state.phrases.length-1\n        ) ? 0 : this.state.phraseIndex+1\n        setTimeout(() => {\n          this.setState(prevState => ({\n            answerReceived: false,\n            phrase: prevState.phrases[nextIndex],\n            phraseIndex: nextIndex\n        }))}, 1000)\n        setTimeout(() => {\n          this.playAudio(this.state.phrase)\n        }, 1000)\n      }\n    }.bind(this)\n  }\n\n  render() {\n    if (!this.state.browserSupport) {\n      return (\n        <div className=\"App\">\n          <div className=\"error-message\">\n            <h1>Hey! Thank you for your interest in nuntio.</h1>\n            Unfortunately, as of March 2019, you can only use nuncio with\n            Chrome and Firefox. If you are using Chrome or Firefox and you still\n            see this message, try updating your version. Else, you can download\n            {\" \"}<a href=\"https://www.google.com/chrome/\">Chrome</a> or\n            {\" \"}<a href=\"https://www.mozilla.org/en-US/firefox/new/\">Firefox</a>\n            {\" \"} and come back.\n          </div>\n        </div>\n      )\n    }\n\n    if (this.state.language===\"\" && !this.state.userInitiation) {\n      return (\n        <div className=\"App\">\n          <div className=\"text-card normal\">\n            <div className=\"welcome\" id=\"first-sentence\">Practice your pronunciation with</div>\n            <div className=\"welcome\" id=\"second-sentence\">nuntio</div>\n            <div className=\"welcome\" id=\"third-sentence\" onClick={this.initiate}>start</div>\n          </div>\n          <div className=\"copyright\">© 2019 Julian Grosse</div>\n        </div>\n      )\n    }\n\n    if (this.state.language===\"\") {\n      return (\n        <div className=\"App\">\n          <div className=\"text-card normal\">\n            <div className=\"welcome\" id=\"language-selection\">\n              nuntio lets you practice your pronunciation when you learn a new language. Choose a language and get started:\n              <div className=\"language-choice\" onClick={() => this.setLanguage('ja-JP')}>\n                日本語 (Japanese)\n              </div>\n              <div className=\"language-choice\" onClick={() => this.setLanguage('de-DE')}>\n                Deutsch (German)\n              </div>\n            </div>\n          </div>\n          <div className=\"copyright\">© 2019 Julian Grosse</div>\n        </div>\n      )\n    }\n\n    let audio\n    if (this.state.answerReceived && this.state.answerCorrect) {\n      audio = <audio ref={this.myRef} src={correctSound} autoPlay/>\n    } else if (this.state.answerReceived && !this.state.answerCorrect) {\n      audio = <audio ref={this.myRef} src={incorrectSound} autoPlay/>\n    }\n    let feedback\n    if (!this.state.answerReceived) {\n      feedback =  <div className=\"ellipsis\">\n                    <span className={\n                      this.state.talking ? 'dot animated' : 'dot'\n                    }></span>\n                    <span className={\n                      this.state.talking ? 'dot second animated' : 'dot second'\n                    }></span>\n                    <span className={\n                      this.state.talking ? 'dot third animated' : 'dot third'\n                    }></span>\n                  </div>\n    } else {\n      feedback =  <div className=\"score-bar\">\n                    <div className=\"outer-bar\">\n                      <div className=\"inner-bar\" style={{ width: `${100*this.state.answerScore}%` }}>\n                      </div>\n                    </div>\n                  </div>\n    }\n    return (\n      <div className=\"App\">\n        <div className={this.state.answerReceived ? (this.state.answerCorrect ? 'text-card correct' : 'text-card incorrect') : 'text-card normal'}>\n          <div className=\"phrase\">{this.state.phrase}</div>\n          <FontAwesomeIcon\n            icon=\"ban\"\n            className=\"ban-icon\"\n            onClick={this.skipPhrase}\n            title=\"Skip this sentence\"\n          />\n          <FontAwesomeIcon\n            icon=\"play\"\n            className=\"play-icon\"\n            onClick={() => this.playAudio(this.state.phrase)}\n            title=\"Play audio\"\n          />\n        </div>\n        <div className=\"circle\">\n          <FontAwesomeIcon\n            icon=\"microphone\"\n            className=\"microphone-icon\"\n            onMouseDown={() => this.startRecording()}\n            onMouseUp={() => this.stopRecording()}\n            title=\"Start recording\"\n          />\n        </div>\n        {feedback}\n        {audio}\n        <div className=\"copyright\">© 2019 Julian Grosse</div>\n        <div className=\"nuntio\" onClick={() => this.setLanguage(\"\")}>nuntio</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default {\n  \"\": [],\n  \"ja-JP\": [\n    \"はい\",\n    \"いいえ\",\n    \"いらっしゃい\",\n    \"いらっしゃいませ\",\n    \"大丈夫\",\n    \"大丈夫ですか\",\n    \"すみません\",\n    \"お願いします\",\n    \"ありがとうございます\",\n    \"わかりません\",\n    \"日本語がわかりません\",\n    \"もう一度お願いします\",\n    \"英語を話せますか?\"\n  ],\n  \"de-DE\": [\n    \"Hallo!\",\n    \"Entschuldigung?\",\n    \"Können Sie mir helfen?\",\n    \"Wo ist der Bahnhof?\",\n    \"Wie viel Uhr ist es?\",\n    \"Ich hätte gerne einen kleinen Kaffee.\"\n  ],\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}